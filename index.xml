<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ryan Moodie</title>
    <link>//eidoom.github.io/</link>
    <description>Recent content on Ryan Moodie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 02 Dec 2019 16:23:53 +0000</lastBuildDate>
    
	<atom:link href="//eidoom.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Autostarting services with systemd</title>
      <link>//eidoom.github.io/post/daemon/</link>
      <pubDate>Mon, 02 Dec 2019 16:23:53 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/daemon/</guid>
      <description>Introduction There are sufficiently many services running on my home server now that starting them all manually after I restart the machine has become tedious, as infrequently as it occurs. Systemd can be used to automate this.
Case study One such service is beets web. To make it run on system start-up, simply create a .service file in /etc/systemd/system/
$ sudo vim /etc/systemd/system/beetsweb.service  [Unit] Description=Beets web daemon After=network.target [Service] User=ryan Group=ryan ExecStart=python3 -m beets web Type=simple TimeoutStopSec=20 KillMode=process Restart=on-failure [Install] WantedBy=multi-user.</description>
    </item>
    
    <item>
      <title>A dashboard for my home server</title>
      <link>//eidoom.github.io/post/nginx/</link>
      <pubDate>Mon, 02 Dec 2019 14:51:04 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nginx/</guid>
      <description>I have a few services running on my home server, so I set up a simple web page with links to each service. To generate (static) content, I decided to use pandoc to generate html from a Markdown file. Since I didn&amp;rsquo;t bother with any styling, it&amp;rsquo;s ugly, but simple. I used Nginx to serve the web page.
Installing Nginx and pandoc Simple! Since we&amp;rsquo;re on Debian
$ sudo apt install nginx pandoc net-tools  I included net-tools for diagnostics.</description>
    </item>
    
    <item>
      <title>File sharing with NFS</title>
      <link>//eidoom.github.io/post/nfs/</link>
      <pubDate>Sat, 09 Nov 2019 17:53:14 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nfs/</guid>
      <description>Introduction I set up an NFSv4 server on my home server to share files with my desktop. The server runs Debian Buster and the desktop runs Fedora 31. My main resource was from the Debian wiki.
Server Install the NFS server
sudo apt install nfs-kernel-server  To configure for version 4 only, we need to edit a couple of files:
sudo vim /etc/default/nfs-common  ... NEED_STATD=&amp;quot;no&amp;quot; ... NEED_IDMAPD=&amp;quot;yes&amp;quot; ...  sudo vim /etc/default/nfs-kernel-server  .</description>
    </item>
    
    <item>
      <title>Installing Nvidia drivers on Fedora</title>
      <link>//eidoom.github.io/post/nvidia-drivers-on-fedora/</link>
      <pubDate>Sat, 09 Nov 2019 14:12:40 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nvidia-drivers-on-fedora/</guid>
      <description>The market I have an Nvidia GeForce GTX 1080 Ti in my desktop, which runs Fedora 31. Using the open source Nouveau drivers was easy, just install and go. In search of optimal performance and power management, I decided to install the proprietary drivers. The options were to use rpmfusion, negativo17, or the Nvidia binaries. Getting that working a finicky one indeed. Be warned that changing from one of these options to another can require a system reinstall.</description>
    </item>
    
    <item>
      <title>Nerdifying music library management with beets</title>
      <link>//eidoom.github.io/post/nerdifying-music-library-management-with-beets/</link>
      <pubDate>Sun, 03 Nov 2019 13:50:54 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nerdifying-music-library-management-with-beets/</guid>
      <description>beets is the endgame music library management system for me. I set it up on my linux server (running Debian Buster).
Installation I like living on the bleeding-edge (despite my stability policy on my server) and intended to tinker with the code, so I installed beets from the GitHub repo as an editable pip package as described here.
cd ~/git git clone git@github.com:beetbox/beets.git cd ~/git/beets python3 -m pip install --user -e .</description>
    </item>
    
    <item>
      <title>Home network ad-blocking with Pi-hole</title>
      <link>//eidoom.github.io/post/home-network-ad-blocking-with-pi-hole/</link>
      <pubDate>Sun, 03 Nov 2019 12:41:53 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/home-network-ad-blocking-with-pi-hole/</guid>
      <description>Pi-hole Pi-hole is an awesome piece of software which blocks ads across a network at the name resolution level. Check out the source here. I set it up on my home linux server.
Installation I hopped into my git repos folder and cloned the Pi-hole repo
cd ~/git git clone git@github.com:pi-hole/pi-hole.git  then used the installation scripts to install it on my system
cd ~/git/pi-hole/automated\ install sudo ./basic-install.sh  I chose CloudFlare as my Upstream DNS Provider because they have a good privacy policy and came out on top for performance in my ping tests</description>
    </item>
    
    <item>
      <title>Addressing the Transmission web client by hostname</title>
      <link>//eidoom.github.io/post/address-transmission-web-client-using-hostname/</link>
      <pubDate>Sun, 03 Nov 2019 09:41:46 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/address-transmission-web-client-using-hostname/</guid>
      <description>Introduction I have Transmission running on my linux server for BitTorrent transfers. I have been accessing the web interface using the IP address of the server in the URL like a dirty animal. It&amp;rsquo;s time to use the hostname of my server for this.
Configuration Before making any changes to the settings, Transmission has to be stopped otherwise it will overwrite those changes
sudo systemctl stop transmission-daemon  Open the settings for editing</description>
    </item>
    
    <item>
      <title>Bonding ethernet interfaces with systemd-networkd</title>
      <link>//eidoom.github.io/post/bonding-ethernet-interfaces-on-debian-stretch/</link>
      <pubDate>Sat, 02 Nov 2019 16:36:51 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/bonding-ethernet-interfaces-on-debian-stretch/</guid>
      <description>Introduction I set up my linux server to use its two ethernet interfaces in parallel. My primary reference was from the Debian wiki. My server runs Debian Buster.
Migrating to systemd-networkd I used systemd-networkd to configure the bond interface. My system already uses systemd, so I just had to enable systemd-networkd.
sudo systemctl enable systemd-networkd  I also set up systemd-resolved to provide name resolution.
sudo systemctl enable systemd-resolved ln -sf /run/systemd/resolve/stub-resolv.</description>
    </item>
    
    <item>
      <title>PhD first year report</title>
      <link>//eidoom.github.io/post/phd-year-one-report/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/phd-year-one-report/</guid>
      <description>The time has come for my first year progress assessment. Here&amp;rsquo;s my report.</description>
    </item>
    
    <item>
      <title>PhD applications</title>
      <link>//eidoom.github.io/post/phd-applications/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/phd-applications/</guid>
      <description>I&amp;rsquo;m applying for PhDs just now. Have a look at my CV or statement of purpose if you like.</description>
    </item>
    
  </channel>
</rss>