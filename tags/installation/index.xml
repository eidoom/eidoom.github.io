<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>installation on Ryan Moodie</title>
    <link>//eidoom.github.io/tags/installation/</link>
    <description>Recent content in installation on Ryan Moodie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 09 Nov 2019 17:53:14 +0000</lastBuildDate>
    
	<atom:link href="//eidoom.github.io/tags/installation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>File sharing with NFS</title>
      <link>//eidoom.github.io/post/nfs/</link>
      <pubDate>Sat, 09 Nov 2019 17:53:14 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nfs/</guid>
      <description>Introduction I set up an NFSv4 server on my home server to share files with my desktop. The server runs Debian Buster and the desktop runs Fedora 31. My main resource was from the Debian wiki.
Server Install the NFS server
sudo apt install nfs-kernel-server  To configure for version 4 only, we need to edit a couple of files:
sudo vim /etc/default/nfs-common  ... NEED_STATD=&amp;quot;no&amp;quot; ... NEED_IDMAPD=&amp;quot;yes&amp;quot; ...  sudo vim /etc/default/nfs-kernel-server  .</description>
    </item>
    
    <item>
      <title>Installing Nvidia drivers on Fedora</title>
      <link>//eidoom.github.io/post/nvidia-drivers-on-fedora/</link>
      <pubDate>Sat, 09 Nov 2019 14:12:40 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nvidia-drivers-on-fedora/</guid>
      <description>The market I have an Nvidia GeForce GTX 1080 Ti in my desktop, which runs Fedora 31. Using the open source Nouveau drivers was easy, just install and go. In search of optimal performance and power management, I decided to install the proprietary drivers. The options were to use rpmfusion, negativo17, or the Nvidia binaries. Getting that working a finicky one indeed. Be warned that changing from one of these options to another can require a system reinstall.</description>
    </item>
    
    <item>
      <title>Nerdifying music library management with beets</title>
      <link>//eidoom.github.io/post/nerdifying-music-library-management-with-beets/</link>
      <pubDate>Sun, 03 Nov 2019 13:50:54 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/nerdifying-music-library-management-with-beets/</guid>
      <description>beets is the endgame music library management system for me. I set it up on my linux server (running Debian Buster).
Installation I like living on the bleeding-edge (despite my stability policy on my server) and intended to tinker with the code, so I installed beets from the GitHub repo as an editable pip package as described here.
cd ~/git git clone git@github.com:beetbox/beets.git cd ~/git/beets python3 -m pip install --user -e .</description>
    </item>
    
    <item>
      <title>Home network ad-blocking with Pi-hole</title>
      <link>//eidoom.github.io/post/home-network-ad-blocking-with-pi-hole/</link>
      <pubDate>Sun, 03 Nov 2019 12:41:53 +0000</pubDate>
      
      <guid>//eidoom.github.io/post/home-network-ad-blocking-with-pi-hole/</guid>
      <description>Pi-hole Pi-hole is an awesome piece of software which blocks ads across a network at the name resolution level. Check out the source here. I set it up on my home linux server.
Installation I hopped into my git repos folder and cloned the Pi-hole repo
cd ~/git git clone git@github.com:pi-hole/pi-hole.git  then used the installation scripts to install it on my system
cd ~/git/pi-hole/automated\ install sudo ./basic-install.sh  I chose CloudFlare as my Upstream DNS Provider because they have a good privacy policy and came out on top for performance in my ping tests</description>
    </item>
    
  </channel>
</rss>